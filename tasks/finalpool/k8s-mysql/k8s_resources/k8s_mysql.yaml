# =========================
# Cluster 242: Namespaces
# =========================
apiVersion: v1
kind: Namespace
metadata:
  name: production
---
apiVersion: v1
kind: Namespace
metadata:
  name: dev
---
apiVersion: v1
kind: Namespace
metadata:
  name: data
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default
  namespace: data
---

# =========================
# data: MySQL-f1 Secrets & Config
# =========================
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-f1-secret
  namespace: data
type: Opaque
stringData:
  MYSQL_ROOT_PASSWORD: "mcpbench0606"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-f1-config
  namespace: data
data:
  custom.cnf: |
    [mysqld]
    local_infile=1
    character-set-server=utf8mb4
    collation-server=utf8mb4_0900_ai_ci

# =========================
# data: MySQL-f1 Service & StatefulSet (Persistent Storage)
# =========================
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-f1
  namespace: data
  labels:
    app: mysql-f1
spec:
  # Use Headless to fix DNS (e.g., mysql-f1-0.mysql-f1.data.svc.cluster.local)
  clusterIP: None
  ports:
    - name: mysql
      port: 3306
      targetPort: 3306
  selector:
    app: mysql-f1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-f1
  namespace: data
spec:
  serviceName: mysql-f1
  replicas: 1
  selector:
    matchLabels:
      app: mysql-f1
  template:
    metadata:
      labels:
        app: mysql-f1
    spec:
      containers:
        - name: mysql
          image: mysql:8.4
          args: ["--local-infile=ON"]
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-f1-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              value: "f1"
          ports:
            - name: mysql
              containerPort: 3306
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
            - name: mysql-f1-config
              mountPath: /etc/mysql/conf.d/custom.cnf
              subPath: custom.cnf
          readinessProbe:
            exec:
              command: ["bash","-lc","mysqladmin ping -uroot -p$MYSQL_ROOT_PASSWORD"]
            initialDelaySeconds: 20
            periodSeconds: 5
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits:
              cpu: "2"
              memory: 4Gi
      volumes:
        - name: mysql-f1-config
          configMap:
            name: mysql-f1-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 5Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: csv-loader
  namespace: data
spec:
  restartPolicy: Never
  containers:
    - name: loader
      image: mysql:8.4
      command: ["sleep", "infinity"]
      env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-f1-secret   # Consistent with MySQL StatefulSet Secret
              key: MYSQL_ROOT_PASSWORD
      volumeMounts:
        - name: csv
          mountPath: /csv
  volumes:
    - name: csv
      emptyDir: {}
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-service
      env: production
      release: v2.3.1
  template:
    metadata:
      labels:
        app: user-service
        env: production
        release: v2.3.1
    spec:
      containers:
        - name: user-api
          image: nginx:1.14
          ports:
            - containerPort: 9090
          env:
            - name: LOG_LEVEL
              value: "info"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-manager-dev
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inventory-manager
      env: dev
      release: dev-latest
  template:
    metadata:
      labels:
        app: inventory-manager
        env: dev
        release: dev-latest
    spec:
      containers:
        - name: inventory-api
          image: nginx:1.14
          ports:
            - containerPort: 6060
          env:
            - name: LOG_LEVEL
              value: "debug"
