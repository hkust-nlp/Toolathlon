{"config": {"task_dir": "finalpool/woocommerce-stock-alert", "id": "finalpool-woocommerce-stock-alert", "needed_mcp_servers": ["woocommerce", "google_sheet", "emails", "filesystem"], "needed_local_tools": ["python_execute", "claim_done", "handle_overlong_tool_outputs", "manage_context", "history"], "task_root": "/ssddata/mcpbench/wenshuo/scaffold/mcpbench_dev/dumps_debug/claude-4-sonnet-0514/finalpool/SingleUserTurn-woocommerce-stock-alert", "task_str": "You need to read the inventory levels of WooCommerce products, check the current stock quantity (stock_quantity) for each product against the safety threshold (stock_threshold), identify all products with stock below the threshold, and automatically update a Google Sheets purchase requisition list named stock_sheet. For each low-stock product, record it in Google Sheets and send an email notification to the purchasing manager (the email address is in purchasing_manager_email.txt). You need to find all low-stock products, record them and send emails. The email template can be found in stock_alert_email_template.md.", "log_file": "/ssddata/mcpbench/wenshuo/scaffold/mcpbench_dev/dumps_debug/claude-4-sonnet-0514/finalpool/SingleUserTurn-woocommerce-stock-alert/traj_log.json", "agent_workspace": "/ssddata/mcpbench/wenshuo/scaffold/mcpbench_dev/dumps_debug/claude-4-sonnet-0514/finalpool/SingleUserTurn-woocommerce-stock-alert/workspace", "launch_time": "2025-10-08 21:12:32 Wednesday", "max_turns": 50, "max_steps_under_single_turn_mode": 200, "single_turn_mode": true, "cn_mode": false, "system_prompts": {"agent": "Accessible workspace directory: /ssddata/mcpbench/wenshuo/scaffold/mcpbench_dev/dumps_debug/claude-4-sonnet-0514/finalpool/SingleUserTurn-woocommerce-stock-alert/workspace\nWhen processing tasks, if you need to read/write local files and the user provides a relative path, you need to combine it with the above workspace directory to get the complete path.\nIf you believe the task is completed, you can either call the `local-claim_done` tool or respond without calling any tool to indicate completion. This will immediately terminate the task, and you will have no further opportunity to work on it.\nPlease complete the given task independently. Do not seek confirmation or additional feedback from the user. You should handle all situations on your own, as the user will not provide any further information.", "user": null}, "initialization": {"workspace": "tasks/finalpool/woocommerce-stock-alert/initial_workspace", "process_command": "uv run -m tasks.finalpool.woocommerce-stock-alert.preprocess.main"}, "stop": {"user_phrases": ["#### STOP"], "tool_names": ["finish"]}, "evaluation": {"groundtruth_workspace": null, "evaluation_command": "uv run -m tasks.finalpool.woocommerce-stock-alert.evaluation.main"}, "meta": {}, "local_token_key_session": {"woocommerce_api_key": "ck_woocommerce_token_benjhMtCdOGk", "woocommerce_api_secret": "cs_woocommerce_token_benjhMtCdOGk", "woocommerce_site_url": "http://localhost:10003/store84", "google_sheets_folder_id": "1D8n7ZcsbndIYpVVfZoQcI9gmJ6ZE_W5v", "emails_config_file": "/ssddata/mcpbench/wenshuo/scaffold/mcpbench_dev/tasks/finalpool/woocommerce-stock-alert/emails_config.json"}}, "request_id": "46b70229-96c0-45b4-a370-79d95ebd30ec", "initial_run_time": "2025-10-08 21:13:13", "completion_time": "2025-10-08 21:19:20", "tool_calls": {"tools": [{"type": "function", "function": {"name": "local-python-execute", "description": "Execute Python code directly under the agent workspace, and returns stdout, stderr, return code, and execution time in a structured format.", "parameters": {"type": "object", "properties": {"code": {"type": "string", "description": "Python code to execute (can be directly pasted into a .py file)"}, "filename": {"type": "string", "description": "Filename for the Python file (including .py extension). If not provided, a random UUID will be used."}, "timeout": {"type": "number", "maximum": 120, "default": 30, "description": "Maximum execution time in seconds. Cannot exceed 120 seconds. If a value greater than 120 is provided, it will be automatically limited to 120 seconds. Default is 30 seconds."}}, "required": ["code"]}}}, {"type": "function", "function": {"name": "local-claim_done", "description": "claim the task is done", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "local-search_overlong_tooloutput", "description": "Search within overlong tool output content using regex patterns and return first page with session ID", "parameters": {"type": "object", "properties": {"shortuuid": {"type": "string", "description": "The shortuuid identifier for the overlong tool output"}, "pattern": {"type": "string", "description": "The regex pattern to search for in the content"}, "page_size": {"type": "integer", "description": "Number of matches per page (default: 10, max: 50)", "minimum": 1, "maximum": 50}, "context_size": {"type": "integer", "description": "Characters of context around each match (default: 1000)", "minimum": 100, "maximum": 5000}}, "required": ["shortuuid", "pattern"]}}}, {"type": "function", "function": {"name": "local-search_overlong_tooloutput_navigate", "description": "Navigate through search results using search session ID", "parameters": {"type": "object", "properties": {"search_session_id": {"type": "string", "description": "The search session ID returned from search_overlong_tool"}, "action": {"type": "string", "description": "Navigation action to perform", "enum": ["next_page", "prev_page", "jump_to_page", "first_page", "last_page"]}, "target_page": {"type": "integer", "description": "Target page number (required for jump_to_page action)", "minimum": 1}}, "required": ["search_session_id"]}}}, {"type": "function", "function": {"name": "local-view_overlong_tooloutput", "description": "View overlong tool output content with pagination and return first page with session ID", "parameters": {"type": "object", "properties": {"shortuuid": {"type": "string", "description": "The shortuuid identifier for the overlong tool output"}, "page_size": {"type": "integer", "description": "Number of characters per page (default: 10000, max: 100000)", "minimum": 1, "maximum": 100000}}, "required": ["shortuuid"]}}}, {"type": "function", "function": {"name": "local-view_overlong_tooloutput_navigate", "description": "Navigate through view content using view session ID", "parameters": {"type": "object", "properties": {"view_session_id": {"type": "string", "description": "The view session ID returned from view_overlong_tool"}, "action": {"type": "string", "description": "Navigation action to perform", "enum": ["next_page", "prev_page", "jump_to_page", "first_page", "last_page"]}, "target_page": {"type": "integer", "description": "Target page number (required for jump_to_page action)", "minimum": 1}}, "required": ["view_session_id"]}}}, {"type": "function", "function": {"name": "local-check_context_status", "description": "Query current conversation context status, including turn statistics, token usage, truncation history and other information", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "local-manage_context", "description": "Manage conversation context by deleting historical messages to free up space. Supports multiple strategies:\n- keep_recent_turns: Keep the most recent N turns of conversation\n- keep_recent_percent: Keep the most recent X% of conversation  \n- delete_first_turns: Delete the earliest N turns of conversation\n- delete_first_percent: Delete the earliest X% of conversation", "parameters": {"type": "object", "properties": {"action": {"type": "string", "enum": ["truncate"], "description": "Operation to execute, currently only supports truncate", "default": "truncate"}, "method": {"type": "string", "enum": ["keep_recent_turns", "keep_recent_percent", "delete_first_turns", "delete_first_percent"], "description": "Truncation strategy"}, "value": {"type": "number", "description": "Numeric parameter, for turns methods it's number of turns, for percent methods it's percentage (0-100)", "minimum": 0}, "preserve_system": {"type": "boolean", "description": "Whether to preserve system messages", "default": true}}, "required": ["method", "value"]}}}, {"type": "function", "function": {"name": "local-smart_context_truncate", "description": "Smart context truncation tool that precisely controls retained content by specifying ranges.\nAccepts 2D list [[start1,end1],[start2,end2],...,[startN,endN]], each sublist represents a closed range to retain (both ends included).\nIndexing starts from 0, ranges cannot overlap, must be arranged in order.", "parameters": {"type": "object", "properties": {"ranges": {"type": "array", "description": "List of ranges to retain, format: [[start1,end1],[start2,end2],...], indexing starts from 0", "items": {"type": "array", "minItems": 2, "maxItems": 2, "items": {"type": "integer", "minimum": 0}}, "minItems": 1}, "preserve_system": {"type": "boolean", "description": "Whether to preserve system messages", "default": true}}, "required": ["ranges"]}}}, {"type": "function", "function": {"name": "local-search_history", "description": "Search history conversation records. Support multiple keyword search or regular expression search, return records containing all keywords. Support paging to browse all results.", "parameters": {"type": "object", "properties": {"keywords": {"type": "array", "items": {"type": "string"}, "description": "Search keyword list or regular expression list, will find records matching all patterns"}, "use_regex": {"type": "boolean", "description": "Whether to treat keywords as regular expressions", "default": false}, "page": {"type": "integer", "description": "Page number, starting from 1", "default": 1, "minimum": 1}, "per_page": {"type": "integer", "description": "Number of results per page", "default": 10, "minimum": 1, "maximum": 50}, "search_id": {"type": "string", "description": "Continue previous search (for paging)"}}, "required": []}}}, {"type": "function", "function": {"name": "local-view_history_turn", "description": "View the complete conversation content of a specific turn, including the context of previous and subsequent turns. Support content truncation to view long content.", "parameters": {"type": "object", "properties": {"turn": {"type": "integer", "description": "Turn number to view", "minimum": 0}, "context_turns": {"type": "integer", "description": "Display the context of previous and subsequent turns", "default": 2, "minimum": 0, "maximum": 10}, "truncate": {"type": "boolean", "description": "Whether to truncate long content (keep the first 500 and last 500 characters)", "default": true}}, "required": ["turn"]}}}, {"type": "function", "function": {"name": "local-browse_history", "description": "Browse history records in chronological order, support forward or backward browsing. Can choose whether to truncate long content.", "parameters": {"type": "object", "properties": {"start_turn": {"type": "integer", "description": "Start turn (inclusive), default from earliest", "minimum": 0}, "end_turn": {"type": "integer", "description": "End turn (inclusive), default to latest", "minimum": 0}, "limit": {"type": "integer", "description": "Maximum number of turns returned", "default": 20, "minimum": 1, "maximum": 100}, "direction": {"type": "string", "enum": ["forward", "backward"], "description": "Browse direction: forward from early to late, backward from late to early", "default": "forward"}, "truncate": {"type": "boolean", "description": "Whether to truncate long content display", "default": true}}, "required": []}}}, {"type": "function", "function": {"name": "local-history_stats", "description": "Get statistics of history records, including total turns, time range, message type distribution, etc.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "local-search_in_turn", "description": "Search content within a specific turn, support regular expressions. Used to find specific information in long content (such as tool output).", "parameters": {"type": "object", "properties": {"turn": {"type": "integer", "description": "Turn number to search", "minimum": 0}, "pattern": {"type": "string", "description": "Search pattern (support regular expressions)"}, "page": {"type": "integer", "description": "Page number, starting from 1", "default": 1, "minimum": 1}, "per_page": {"type": "integer", "description": "Number of results per page", "default": 10, "minimum": 1, "maximum": 20}, "search_id": {"type": "string", "description": "Search session ID (for paging)"}, "jump_to": {"oneOf": [{"type": "string", "enum": ["first", "last", "next", "prev"]}, {"type": "integer", "minimum": 1}], "description": "Jump to: 'first'(first page), 'last'(last page), 'next'(next page), 'prev'(previous page), or specific page number"}}, "required": ["turn"]}}}, {"type": "function", "function": {"name": "emails_get_emails", "description": "Get paginated list of emails from specified folder\n\nArgs:\n    folder: Email folder name (default: INBOX)\n    page: Page number starting from 1 (default: 1)\n    page_size: Number of emails per page (default: 20)\n", "parameters": {"type": "object", "properties": {"folder": {"type": "string"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}}}}}, {"type": "function", "function": {"name": "emails_read_email", "description": "Read full content of a specific email\n\nArgs:\n    email_id: Email ID to read\n", "parameters": {"type": "object", "properties": {"email_id": {"type": "string"}}, "required": ["email_id"]}}}, {"type": "function", "function": {"name": "emails_search_emails", "description": "Search emails with query string (sorted by date descending)\n\nArgs:\n    query: Search query (subject, from, body content)\n    folder: Folder to search in (default: INBOX)\n    page: Page number starting from 1 (default: 1)\n    page_size: Number of results per page (default: 20)\n", "parameters": {"type": "object", "properties": {"query": {"type": "string"}, "folder": {"type": "string"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}}, "required": ["query"]}}}, {"type": "function", "function": {"name": "emails_send_email", "description": "Send an email with optional HTML body, CC, BCC, and attachments\n\nArgs:\n    to: Recipient email address(es), comma-separated\n    subject: Email subject\n    body: Plain text body\n    html_body: HTML body content (optional)\n    cc: CC recipients, comma-separated (optional)\n    bcc: BCC recipients, comma-separated (optional)\n    attachments: List of file paths to attach (optional)\n", "parameters": {"type": "object", "properties": {"to": {"type": "string"}, "subject": {"type": "string"}, "body": {"type": "string"}, "html_body": {"type": "string"}, "cc": {"type": "string"}, "bcc": {"type": "string"}, "attachments": {"type": "array", "items": {"type": "string"}}}, "required": ["to", "subject", "body"]}}}, {"type": "function", "function": {"name": "emails_reply_email", "description": "Reply to an email\n\nArgs:\n    email_id: ID of email to reply to\n    body: Reply message body (plain text)\n    html_body: Reply message body (HTML, optional)\n    cc: Additional CC recipients (optional)\n    bcc: BCC recipients (optional)\n    reply_all: Whether to reply to all recipients (default: False)\n", "parameters": {"type": "object", "properties": {"email_id": {"type": "string"}, "body": {"type": "string"}, "html_body": {"type": "string"}, "cc": {"type": "string"}, "bcc": {"type": "string"}, "reply_all": {"type": "boolean"}}, "required": ["email_id", "body"]}}}, {"type": "function", "function": {"name": "emails_forward_email", "description": "Forward an email to other recipients\n\nArgs:\n    email_id: ID of email to forward\n    to: Recipients to forward to\n    body: Additional message body (optional)\n    html_body: Additional HTML message body (optional)\n    cc: CC recipients (optional)\n    bcc: BCC recipients (optional)\n", "parameters": {"type": "object", "properties": {"email_id": {"type": "string"}, "to": {"type": "string"}, "body": {"type": "string"}, "html_body": {"type": "string"}, "cc": {"type": "string"}, "bcc": {"type": "string"}}, "required": ["email_id", "to"]}}}, {"type": "function", "function": {"name": "emails_delete_email", "description": "Delete an email\n\nArgs:\n    email_id: Email ID to delete\n", "parameters": {"type": "object", "properties": {"email_id": {"type": "string"}}, "required": ["email_id"]}}}, {"type": "function", "function": {"name": "emails_move_email", "description": "Move email to another folder\n\nArgs:\n    email_id: Email ID to move\n    target_folder: Target folder name\n", "parameters": {"type": "object", "properties": {"email_id": {"type": "string"}, "target_folder": {"type": "string"}}, "required": ["email_id", "target_folder"]}}}, {"type": "function", "function": {"name": "emails_mark_emails", "description": "Mark multiple emails with status (read/unread/important/not_important)\n\nArgs:\n    email_ids: List of email IDs to mark\n    status: Status to set (read, unread, important, not_important)\n", "parameters": {"type": "object", "properties": {"email_ids": {"type": "array", "items": {"type": "string"}}, "status": {"type": "string"}}, "required": ["email_ids", "status"]}}}, {"type": "function", "function": {"name": "emails_move_emails", "description": "Move multiple emails to another folder with improved ID synchronization\n\nArgs:\n    email_ids: List of email IDs to move\n    target_folder: Target folder name\n", "parameters": {"type": "object", "properties": {"email_ids": {"type": "array", "items": {"type": "string"}}, "target_folder": {"type": "string"}}, "required": ["email_ids", "target_folder"]}}}, {"type": "function", "function": {"name": "emails_delete_emails", "description": "Delete multiple emails with improved ID synchronization\n\nArgs:\n    email_ids: List of email IDs to delete\n", "parameters": {"type": "object", "properties": {"email_ids": {"type": "array", "items": {"type": "string"}}}, "required": ["email_ids"]}}}, {"type": "function", "function": {"name": "emails_get_folders", "description": "Get list of available email folders", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "emails_create_folder", "description": "Create new email folder\n\nArgs:\n    folder_name: Name of folder to create\n", "parameters": {"type": "object", "properties": {"folder_name": {"type": "string"}}, "required": ["folder_name"]}}}, {"type": "function", "function": {"name": "emails_delete_folder", "description": "Delete email folder\n\nArgs:\n    folder_name: Name of folder to delete\n", "parameters": {"type": "object", "properties": {"folder_name": {"type": "string"}}, "required": ["folder_name"]}}}, {"type": "function", "function": {"name": "emails_get_mailbox_stats", "description": "Get mailbox statistics\n\nArgs:\n    folder_name: Specific folder name (optional, defaults to all folders)\n", "parameters": {"type": "object", "properties": {"folder_name": {"type": "string"}}}}}, {"type": "function", "function": {"name": "emails_get_unread_count", "description": "Get unread message count\n\nArgs:\n    folder_name: Specific folder name (optional, defaults to all folders)\n", "parameters": {"type": "object", "properties": {"folder_name": {"type": "string"}}}}}, {"type": "function", "function": {"name": "emails_check_connection", "description": "Check email server connection status", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "emails_get_email_headers", "description": "Get complete email headers for technical analysis\n\nArgs:\n    email_id: Email ID to get headers for\n", "parameters": {"type": "object", "properties": {"email_id": {"type": "string"}}, "required": ["email_id"]}}}, {"type": "function", "function": {"name": "emails_save_draft", "description": "Save email draft\n\nArgs:\n    subject: Email subject\n    body: Plain text body\n    html_body: HTML body content (optional)\n    to: Recipient email address(es) (optional)\n    cc: CC recipients (optional)\n    bcc: BCC recipients (optional)\n", "parameters": {"type": "object", "properties": {"subject": {"type": "string"}, "body": {"type": "string"}, "html_body": {"type": "string"}, "to": {"type": "string"}, "cc": {"type": "string"}, "bcc": {"type": "string"}}, "required": ["subject", "body"]}}}, {"type": "function", "function": {"name": "emails_get_drafts", "description": "Get list of saved drafts\n\nArgs:\n    page: Page number starting from 1 (default: 1)\n    page_size: Number of drafts per page (default: 20)\n", "parameters": {"type": "object", "properties": {"page": {"type": "integer"}, "page_size": {"type": "integer"}}}}}, {"type": "function", "function": {"name": "emails_update_draft", "description": "Update existing draft\n\nArgs:\n    draft_id: Draft ID to update\n    subject: Email subject (optional)\n    body: Plain text body (optional)\n    html_body: HTML body content (optional)\n    to: Recipient email address(es) (optional)\n    cc: CC recipients (optional)\n    bcc: BCC recipients (optional)\n", "parameters": {"type": "object", "properties": {"draft_id": {"type": "string"}, "subject": {"type": "string"}, "body": {"type": "string"}, "html_body": {"type": "string"}, "to": {"type": "string"}, "cc": {"type": "string"}, "bcc": {"type": "string"}}, "required": ["draft_id"]}}}, {"type": "function", "function": {"name": "emails_delete_draft", "description": "Delete draft\n\nArgs:\n    draft_id: Draft ID to delete\n", "parameters": {"type": "object", "properties": {"draft_id": {"type": "string"}}, "required": ["draft_id"]}}}, {"type": "function", "function": {"name": "emails_export_emails", "description": "Export emails to file for backup\n\nArgs:\n    folder: Specific folder to export (mutually exclusive with export_all_folders)\n    export_path: Path where to save the export file  \n    max_emails: Maximum number of emails to export (optional, exports all if not specified)\n    export_all_folders: Export from all folders instead of just one (default: False)\n", "parameters": {"type": "object", "properties": {"folder": {"type": "string"}, "export_path": {"type": "string"}, "max_emails": {"type": "integer"}, "export_all_folders": {"type": "boolean"}}}}}, {"type": "function", "function": {"name": "emails_import_emails", "description": "Import emails from backup file to IMAP server\n\nArgs:\n    import_path: Path to import file (.json or .eml) or a directory\n    target_folder: Target folder for imported emails (if preserve_folders=False)\n    preserve_folders: Whether to preserve original folder structure (default: True)\n", "parameters": {"type": "object", "properties": {"import_path": {"type": "string"}, "target_folder": {"type": "string"}, "preserve_folders": {"type": "boolean"}}, "required": ["import_path"]}}}, {"type": "function", "function": {"name": "emails_download_attachment", "description": "Download email attachment to configured download path\n\nArgs:\n    email_id: Email ID containing the attachment\n    attachment_filename: Name of attachment to download\n", "parameters": {"type": "object", "properties": {"email_id": {"type": "string"}, "attachment_filename": {"type": "string"}}, "required": ["email_id", "attachment_filename"]}}}, {"type": "function", "function": {"name": "filesystem_read_file", "description": "Read the complete contents of a file from the file system. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Only works within allowed directories.", "parameters": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"]}}}, {"type": "function", "function": {"name": "filesystem_read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "parameters": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"]}}}, {"type": "function", "function": {"name": "filesystem_write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "parameters": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"]}}}, {"type": "function", "function": {"name": "filesystem_edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "parameters": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object"}}, "dryRun": {"type": "boolean", "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"]}}}, {"type": "function", "function": {"name": "filesystem_create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "parameters": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"]}}}, {"type": "function", "function": {"name": "filesystem_list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "parameters": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"]}}}, {"type": "function", "function": {"name": "filesystem_list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "parameters": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "description": "Sort entries by name or size"}}, "required": ["path"]}}}, {"type": "function", "function": {"name": "filesystem_directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "parameters": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"]}}}, {"type": "function", "function": {"name": "filesystem_move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "parameters": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"]}}}, {"type": "function", "function": {"name": "filesystem_search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "parameters": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}}}, "required": ["path", "pattern"]}}}, {"type": "function", "function": {"name": "filesystem_get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "parameters": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"]}}}, {"type": "function", "function": {"name": "filesystem_list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Use this to understand which directories are available before trying to access files.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "woocommerce_woo_products_list", "description": "List products with optional filters", "parameters": {"type": "object", "properties": {"perPage": {"type": "integer", "description": "Items per page"}, "page": {"type": "integer", "description": "Page number"}, "search": {"type": "string", "description": "Search term"}, "status": {"type": "string", "description": "Product status"}, "category": {"type": "string", "description": "Category ID"}, "tag": {"type": "string", "description": "Tag ID"}, "sku": {"type": "string", "description": "Product SKU"}, "featured": {"type": "boolean", "description": "Featured products only"}, "onSale": {"type": "boolean", "description": "On sale products only"}, "minPrice": {"type": "string", "description": "Minimum price"}, "maxPrice": {"type": "string", "description": "Maximum price"}, "stockStatus": {"type": "string", "description": "Stock status"}, "orderby": {"type": "string", "description": "Order by field"}, "order": {"type": "string", "description": "Order direction"}}}}}, {"type": "function", "function": {"name": "woocommerce_woo_products_get", "description": "Get a specific product by ID", "parameters": {"type": "object", "properties": {"productId": {"type": "integer", "description": "Product ID"}}, "required": ["productId"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_products_create", "description": "Create a new product", "parameters": {"type": "object", "properties": {"productData": {"type": "object", "description": "Product data"}}, "required": ["productData"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_products_update", "description": "Update a product", "parameters": {"type": "object", "properties": {"productId": {"type": "integer", "description": "Product ID"}, "productData": {"type": "object", "description": "Product data to update"}}, "required": ["productId", "productData"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_products_delete", "description": "Delete a product", "parameters": {"type": "object", "properties": {"productId": {"type": "integer", "description": "Product ID"}, "force": {"type": "boolean", "description": "Force delete"}}, "required": ["productId"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_products_batch_update", "description": "Batch update products", "parameters": {"type": "object", "properties": {"create": {"type": "array", "items": {"type": "object"}, "description": "Products to create"}, "update": {"type": "array", "items": {"type": "object"}, "description": "Products to update"}, "delete": {"type": "array", "items": {"type": "integer"}, "description": "Product IDs to delete"}}}}}, {"type": "function", "function": {"name": "woocommerce_woo_products_variations_list", "description": "List product variations", "parameters": {"type": "object", "properties": {"productId": {"type": "integer", "description": "Product ID"}, "perPage": {"type": "integer", "description": "Items per page"}, "page": {"type": "integer", "description": "Page number"}}, "required": ["productId"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_products_categories_list", "description": "List product categories", "parameters": {"type": "object", "properties": {"perPage": {"type": "integer", "description": "Items per page"}, "page": {"type": "integer", "description": "Page number"}, "search": {"type": "string", "description": "Search term"}, "parent": {"type": "integer", "description": "Parent category ID"}, "hideEmpty": {"type": "boolean", "description": "Hide empty categories"}}}}}, {"type": "function", "function": {"name": "woocommerce_woo_products_categories_create", "description": "Create a new product category", "parameters": {"type": "object", "properties": {"categoryData": {"type": "object"}}, "required": ["categoryData"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_products_tags_list", "description": "List product tags", "parameters": {"type": "object", "properties": {"perPage": {"type": "integer", "description": "Items per page"}, "page": {"type": "integer", "description": "Page number"}, "search": {"type": "string", "description": "Search term"}, "hideEmpty": {"type": "boolean", "description": "Hide empty tags"}}}}}, {"type": "function", "function": {"name": "woocommerce_woo_products_reviews_list", "description": "List product reviews", "parameters": {"type": "object", "properties": {"productId": {"type": "integer", "description": "Product ID (optional)"}, "perPage": {"type": "integer", "description": "Items per page"}, "page": {"type": "integer", "description": "Page number"}, "status": {"type": "string", "description": "Review status"}}}}}, {"type": "function", "function": {"name": "woocommerce_woo_orders_list", "description": "List orders with optional filters", "parameters": {"type": "object", "properties": {"perPage": {"type": "integer", "description": "Items per page"}, "page": {"type": "integer", "description": "Page number"}, "status": {"type": "array", "items": {"type": "string"}, "description": "Order statuses"}, "customer": {"type": "integer", "description": "Customer ID"}, "product": {"type": "integer", "description": "Product ID"}, "dateAfter": {"type": "string", "description": "Orders after this date (ISO 8601)"}, "dateBefore": {"type": "string", "description": "Orders before this date (ISO 8601)"}, "orderby": {"type": "string", "description": "Order by field"}, "order": {"type": "string", "description": "Order direction"}}}}}, {"type": "function", "function": {"name": "woocommerce_woo_orders_get", "description": "Get a specific order by ID", "parameters": {"type": "object", "properties": {"orderId": {"type": "integer", "description": "Order ID"}}, "required": ["orderId"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_orders_create", "description": "Create a new order", "parameters": {"type": "object", "properties": {"orderData": {"type": "object", "description": "Order data"}}, "required": ["orderData"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_orders_update", "description": "Update an order", "parameters": {"type": "object", "properties": {"orderId": {"type": "integer", "description": "Order ID"}, "orderData": {"type": "object", "description": "Order data to update"}}, "required": ["orderId", "orderData"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_orders_delete", "description": "Delete an order", "parameters": {"type": "object", "properties": {"orderId": {"type": "integer", "description": "Order ID"}, "force": {"type": "boolean", "description": "Force delete"}}, "required": ["orderId"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_orders_batch_update", "description": "Batch update orders", "parameters": {"type": "object", "properties": {"create": {"type": "array", "items": {"type": "object"}, "description": "Orders to create"}, "update": {"type": "array", "items": {"type": "object"}, "description": "Orders to update"}, "delete": {"type": "array", "items": {"type": "integer"}, "description": "Order IDs to delete"}}}}}, {"type": "function", "function": {"name": "woocommerce_woo_orders_notes_create", "description": "Add a note to an order", "parameters": {"type": "object", "properties": {"orderId": {"type": "integer", "description": "Order ID"}, "note": {"type": "string", "description": "Note content"}, "customerNote": {"type": "boolean", "description": "Is customer note"}}, "required": ["orderId", "note"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_orders_refunds_create", "description": "Create a refund for an order", "parameters": {"type": "object", "properties": {"orderId": {"type": "integer", "description": "Order ID"}, "amount": {"type": "string", "description": "Refund amount"}, "reason": {"type": "string", "description": "Refund reason"}, "refundPayment": {"type": "boolean", "description": "Refund payment"}, "lineItems": {"type": "array", "items": {"type": "object"}, "description": "Line items to refund"}}, "required": ["orderId"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_customers_list", "description": "List customers with optional filters", "parameters": {"type": "object", "properties": {"perPage": {"type": "integer", "description": "Items per page"}, "page": {"type": "integer", "description": "Page number"}, "search": {"type": "string", "description": "Search term"}, "email": {"type": "string", "description": "Customer email"}, "role": {"type": "string", "description": "Customer role"}, "orderby": {"type": "string", "description": "Order by field"}, "order": {"type": "string", "description": "Order direction"}}}}}, {"type": "function", "function": {"name": "woocommerce_woo_customers_get", "description": "Get a specific customer by ID", "parameters": {"type": "object", "properties": {"customerId": {"type": "integer", "description": "Customer ID"}}, "required": ["customerId"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_customers_create", "description": "Create a new customer", "parameters": {"type": "object", "properties": {"customerData": {"type": "object", "description": "Customer data"}}, "required": ["customerData"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_customers_update", "description": "Update a customer", "parameters": {"type": "object", "properties": {"customerId": {"type": "integer", "description": "Customer ID"}, "customerData": {"type": "object", "description": "Customer data to update"}}, "required": ["customerId", "customerData"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_coupons_list", "description": "List coupons with optional filters", "parameters": {"type": "object", "properties": {"perPage": {"type": "integer", "description": "Items per page"}, "page": {"type": "integer", "description": "Page number"}, "search": {"type": "string", "description": "Search term"}, "code": {"type": "string", "description": "Coupon code"}}}}}, {"type": "function", "function": {"name": "woocommerce_woo_coupons_get", "description": "Get a specific coupon by ID", "parameters": {"type": "object", "properties": {"couponId": {"type": "integer", "description": "Coupon ID"}}, "required": ["couponId"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_coupons_create", "description": "Create a new coupon", "parameters": {"type": "object", "properties": {"couponData": {"type": "object", "description": "Coupon data"}}, "required": ["couponData"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_coupons_update", "description": "Update a coupon", "parameters": {"type": "object", "properties": {"couponId": {"type": "integer", "description": "Coupon ID"}, "couponData": {"type": "object", "description": "Coupon data to update"}}, "required": ["couponId", "couponData"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_coupons_delete", "description": "Delete a coupon", "parameters": {"type": "object", "properties": {"couponId": {"type": "integer", "description": "Coupon ID"}, "force": {"type": "boolean", "description": "Force delete"}}, "required": ["couponId"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_reports_sales", "description": "Get sales report", "parameters": {"type": "object", "properties": {"period": {"type": "string", "description": "Report period"}, "dateMin": {"type": "string", "description": "Start date (YYYY-MM-DD)"}, "dateMax": {"type": "string", "description": "End date (YYYY-MM-DD)"}}}}}, {"type": "function", "function": {"name": "woocommerce_woo_reports_top_sellers", "description": "Get top sellers report", "parameters": {"type": "object", "properties": {"period": {"type": "string", "description": "Report period"}, "dateMin": {"type": "string", "description": "Start date (YYYY-MM-DD)"}, "dateMax": {"type": "string", "description": "End date (YYYY-MM-DD)"}, "perPage": {"type": "integer", "description": "Items per page"}, "page": {"type": "integer", "description": "Page number"}}}}}, {"type": "function", "function": {"name": "woocommerce_woo_reports_customers", "description": "Get customers report", "parameters": {"type": "object", "properties": {"period": {"type": "string", "description": "Report period"}, "dateMin": {"type": "string", "description": "Start date (YYYY-MM-DD)"}, "dateMax": {"type": "string", "description": "End date (YYYY-MM-DD)"}}}}}, {"type": "function", "function": {"name": "woocommerce_woo_reports_orders", "description": "Get orders report", "parameters": {"type": "object", "properties": {"period": {"type": "string", "description": "Report period"}, "dateMin": {"type": "string", "description": "Start date (YYYY-MM-DD)"}, "dateMax": {"type": "string", "description": "End date (YYYY-MM-DD)"}}}}}, {"type": "function", "function": {"name": "woocommerce_woo_reports_products", "description": "Get products report", "parameters": {"type": "object", "properties": {"period": {"type": "string", "description": "Report period"}, "dateMin": {"type": "string", "description": "Start date (YYYY-MM-DD)"}, "dateMax": {"type": "string", "description": "End date (YYYY-MM-DD)"}, "perPage": {"type": "integer", "description": "Items per page"}, "page": {"type": "integer", "description": "Page number"}}}}}, {"type": "function", "function": {"name": "woocommerce_woo_reports_stock", "description": "Get stock report", "parameters": {"type": "object", "properties": {"perPage": {"type": "integer", "description": "Items per page"}, "page": {"type": "integer", "description": "Page number"}}}}}, {"type": "function", "function": {"name": "woocommerce_woo_reports_low_stock", "description": "Get low stock report", "parameters": {"type": "object", "properties": {"perPage": {"type": "integer", "description": "Items per page"}, "page": {"type": "integer", "description": "Page number"}}}}}, {"type": "function", "function": {"name": "woocommerce_woo_shipping_zones_list", "description": "List shipping zones", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "woocommerce_woo_shipping_zones_get", "description": "Get a shipping zone", "parameters": {"type": "object", "properties": {"zoneId": {"type": "integer", "description": "Zone ID"}}, "required": ["zoneId"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_shipping_zones_create", "description": "Create a shipping zone", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Zone name"}, "order": {"type": "integer", "description": "Zone order"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_shipping_zones_update", "description": "Update a shipping zone", "parameters": {"type": "object", "properties": {"zoneId": {"type": "integer", "description": "Zone ID"}, "name": {"type": "string", "description": "Zone name"}, "order": {"type": "integer", "description": "Zone order"}}, "required": ["zoneId"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_shipping_zone_methods_list", "description": "List methods for a shipping zone", "parameters": {"type": "object", "properties": {"zoneId": {"type": "integer", "description": "Zone ID"}}, "required": ["zoneId"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_shipping_zone_methods_create", "description": "Add a method to a shipping zone", "parameters": {"type": "object", "properties": {"zoneId": {"type": "integer", "description": "Zone ID"}, "methodId": {"type": "string", "description": "Method ID"}, "enabled": {"type": "boolean", "description": "Is enabled"}, "settings": {"type": "object", "description": "Method settings"}}, "required": ["zoneId", "methodId"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_tax_rates_list", "description": "List tax rates", "parameters": {"type": "object", "properties": {"taxClass": {"type": "string", "description": "Tax class"}, "perPage": {"type": "integer", "description": "Items per page"}, "page": {"type": "integer", "description": "Page number"}}}}}, {"type": "function", "function": {"name": "woocommerce_woo_tax_rates_get", "description": "Get a tax rate", "parameters": {"type": "object", "properties": {"rateId": {"type": "integer", "description": "Tax rate ID"}}, "required": ["rateId"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_tax_rates_create", "description": "Create a tax rate", "parameters": {"type": "object", "properties": {"country": {"type": "string", "description": "Country code"}, "state": {"type": "string", "description": "State code"}, "rate": {"type": "string", "description": "Tax rate"}, "name": {"type": "string", "description": "Tax name"}, "priority": {"type": "integer", "description": "Priority"}, "compound": {"type": "boolean", "description": "Is compound"}, "shipping": {"type": "boolean", "description": "Apply to shipping"}, "class": {"type": "string", "description": "Tax class"}}, "required": ["country", "rate"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_tax_classes_list", "description": "List tax classes", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "woocommerce_woo_system_status", "description": "Get system status information", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "woocommerce_woo_system_tools_list", "description": "List system tools", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "woocommerce_woo_system_tools_run", "description": "Run a system tool", "parameters": {"type": "object", "properties": {"toolId": {"type": "string", "description": "Tool ID"}}, "required": ["toolId"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_settings_list", "description": "List settings groups", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "woocommerce_woo_settings_get", "description": "Get settings for a group", "parameters": {"type": "object", "properties": {"groupId": {"type": "string", "description": "Settings group ID"}}, "required": ["groupId"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_payment_gateways_list", "description": "List payment gateways", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "woocommerce_woo_payment_gateways_get", "description": "Get a payment gateway", "parameters": {"type": "object", "properties": {"gatewayId": {"type": "string", "description": "Gateway ID"}}, "required": ["gatewayId"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_payment_gateways_update", "description": "Update a payment gateway", "parameters": {"type": "object", "properties": {"gatewayId": {"type": "string", "description": "Gateway ID"}, "enabled": {"type": "boolean", "description": "Is enabled"}, "title": {"type": "string", "description": "Gateway title"}, "description": {"type": "string", "description": "Gateway description"}, "settings": {"type": "object", "description": "Gateway settings"}}, "required": ["gatewayId"]}}}, {"type": "function", "function": {"name": "woocommerce_woo_webhooks_list", "description": "List webhooks", "parameters": {"type": "object", "properties": {"perPage": {"type": "integer", "description": "Items per page"}, "page": {"type": "integer", "description": "Page number"}, "status": {"type": "string", "description": "Webhook status"}}}}}, {"type": "function", "function": {"name": "woocommerce_woo_webhooks_create", "description": "Create a webhook", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Webhook name"}, "topic": {"type": "string", "description": "Webhook topic"}, "delivery_url": {"type": "string", "description": "Delivery URL"}, "status": {"type": "string", "description": "Webhook status"}, "secret": {"type": "string", "description": "Secret key"}}, "required": ["name", "topic", "delivery_url"]}}}, {"type": "function", "function": {"name": "google_sheet_get_sheet_data", "description": "\nGet data from a specific sheet in a Google Spreadsheet.\n\nArgs:\n    spreadsheet_id: The ID of the spreadsheet (found in the URL)\n    sheet: The name of the sheet\n    range: Optional cell range in A1 notation (e.g., 'A1:C10'). If not provided, gets all data.\n\nReturns:\n    Grid data structure with full metadata from Google Sheets API\n", "parameters": {"type": "object", "properties": {"spreadsheet_id": {"type": "string"}, "sheet": {"type": "string"}, "range": {}}, "required": ["spreadsheet_id", "sheet"]}}}, {"type": "function", "function": {"name": "google_sheet_get_sheet_formulas", "description": "\nGet formulas from a specific sheet in a Google Spreadsheet.\n\nArgs:\n    spreadsheet_id: The ID of the spreadsheet (found in the URL)\n    sheet: The name of the sheet\n    range: Optional cell range in A1 notation (e.g., 'A1:C10'). If not provided, gets all formulas from the sheet.\n\nReturns:\n    A 2D array of the sheet formulas.\n", "parameters": {"type": "object", "properties": {"spreadsheet_id": {"type": "string"}, "sheet": {"type": "string"}, "range": {}}, "required": ["spreadsheet_id", "sheet"]}}}, {"type": "function", "function": {"name": "google_sheet_update_cells", "description": "\nUpdate cells in a Google Spreadsheet.\n\nArgs:\n    spreadsheet_id: The ID of the spreadsheet (found in the URL)\n    sheet: The name of the sheet\n    range: Cell range in A1 notation (e.g., 'A1:C10')\n    data: 2D array of values to update\n\nReturns:\n    Result of the update operation\n", "parameters": {"type": "object", "properties": {"spreadsheet_id": {"type": "string"}, "sheet": {"type": "string"}, "range": {"type": "string"}, "data": {"type": "array", "items": {"type": "array", "items": {}}}}, "required": ["spreadsheet_id", "sheet", "range", "data"]}}}, {"type": "function", "function": {"name": "google_sheet_batch_update_cells", "description": "\nBatch update multiple ranges in a Google Spreadsheet.\n\nArgs:\n    spreadsheet_id: The ID of the spreadsheet (found in the URL)\n    sheet: The name of the sheet\n    ranges: Dictionary mapping range strings to 2D arrays of values\n           e.g., {'A1:B2': [[1, 2], [3, 4]], 'D1:E2': [['a', 'b'], ['c', 'd']]}\n\nReturns:\n    Result of the batch update operation\n", "parameters": {"type": "object", "properties": {"spreadsheet_id": {"type": "string"}, "sheet": {"type": "string"}, "ranges": {"type": "object"}}, "required": ["spreadsheet_id", "sheet", "ranges"]}}}, {"type": "function", "function": {"name": "google_sheet_add_rows", "description": "\nAdd rows to a sheet in a Google Spreadsheet.\n\nArgs:\n    spreadsheet_id: The ID of the spreadsheet (found in the URL)\n    sheet: The name of the sheet\n    count: Number of rows to add\n    start_row: 0-based row index to start adding. If not provided, adds at the beginning.\n\nReturns:\n    Result of the operation\n", "parameters": {"type": "object", "properties": {"spreadsheet_id": {"type": "string"}, "sheet": {"type": "string"}, "count": {"type": "integer"}, "start_row": {}}, "required": ["spreadsheet_id", "sheet", "count"]}}}, {"type": "function", "function": {"name": "google_sheet_add_columns", "description": "\nAdd columns to a sheet in a Google Spreadsheet.\n\nArgs:\n    spreadsheet_id: The ID of the spreadsheet (found in the URL)\n    sheet: The name of the sheet\n    count: Number of columns to add\n    start_column: 0-based column index to start adding. If not provided, adds at the beginning.\n\nReturns:\n    Result of the operation\n", "parameters": {"type": "object", "properties": {"spreadsheet_id": {"type": "string"}, "sheet": {"type": "string"}, "count": {"type": "integer"}, "start_column": {}}, "required": ["spreadsheet_id", "sheet", "count"]}}}, {"type": "function", "function": {"name": "google_sheet_list_sheets", "description": "\nList all sheets in a Google Spreadsheet.\n\nArgs:\n    spreadsheet_id: The ID of the spreadsheet (found in the URL)\n\nReturns:\n    List of sheet names\n", "parameters": {"type": "object", "properties": {"spreadsheet_id": {"type": "string"}}, "required": ["spreadsheet_id"]}}}, {"type": "function", "function": {"name": "google_sheet_copy_sheet", "description": "\nCopy a sheet from one spreadsheet to another.\n\nArgs:\n    src_spreadsheet: Source spreadsheet ID\n    src_sheet: Source sheet name\n    dst_spreadsheet: Destination spreadsheet ID\n    dst_sheet: Destination sheet name\n\nReturns:\n    Result of the operation\n", "parameters": {"type": "object", "properties": {"src_spreadsheet": {"type": "string"}, "src_sheet": {"type": "string"}, "dst_spreadsheet": {"type": "string"}, "dst_sheet": {"type": "string"}}, "required": ["src_spreadsheet", "src_sheet", "dst_spreadsheet", "dst_sheet"]}}}, {"type": "function", "function": {"name": "google_sheet_rename_sheet", "description": "\nRename a sheet in a Google Spreadsheet.\n\nArgs:\n    spreadsheet: Spreadsheet ID\n    sheet: Current sheet name\n    new_name: New sheet name\n\nReturns:\n    Result of the operation\n", "parameters": {"type": "object", "properties": {"spreadsheet": {"type": "string"}, "sheet": {"type": "string"}, "new_name": {"type": "string"}}, "required": ["spreadsheet", "sheet", "new_name"]}}}, {"type": "function", "function": {"name": "google_sheet_get_multiple_sheet_data", "description": "\nGet data from multiple specific ranges in Google Spreadsheets.\n\nArgs:\n    queries: A list of dictionaries, each specifying a query. \n             Each dictionary should have 'spreadsheet_id', 'sheet', and 'range' keys.\n             Example: [{'spreadsheet_id': 'abc', 'sheet': 'Sheet1', 'range': 'A1:B5'}, \n                       {'spreadsheet_id': 'xyz', 'sheet': 'Data', 'range': 'C1:C10'}]\n\nReturns:\n    A list of dictionaries, each containing the original query parameters \n    and the fetched 'data' or an 'error'.\n", "parameters": {"type": "object", "properties": {"queries": {"type": "array", "items": {"type": "object"}}}, "required": ["queries"]}}}, {"type": "function", "function": {"name": "google_sheet_get_multiple_spreadsheet_summary", "description": "\nGet a summary of multiple Google Spreadsheets, including sheet names, \nheaders, and the first few rows of data for each sheet.\n\nArgs:\n    spreadsheet_ids: A list of spreadsheet IDs to summarize.\n    rows_to_fetch: The number of rows (including header) to fetch for the summary (default: 5).\n\nReturns:\n    A list of dictionaries, each representing a spreadsheet summary. \n    Includes spreadsheet title, sheet summaries (title, headers, first rows), or an error.\n", "parameters": {"type": "object", "properties": {"spreadsheet_ids": {"type": "array", "items": {"type": "string"}}, "rows_to_fetch": {"type": "integer"}}, "required": ["spreadsheet_ids"]}}}, {"type": "function", "function": {"name": "google_sheet_create_spreadsheet", "description": "\nCreate a new Google Spreadsheet.\n\nArgs:\n    title: The title of the new spreadsheet\n\nReturns:\n    Information about the newly created spreadsheet including its ID\n", "parameters": {"type": "object", "properties": {"title": {"type": "string"}}, "required": ["title"]}}}, {"type": "function", "function": {"name": "google_sheet_create_sheet", "description": "\nCreate a new sheet tab in an existing Google Spreadsheet.\n\nArgs:\n    spreadsheet_id: The ID of the spreadsheet\n    title: The title for the new sheet\n\nReturns:\n    Information about the newly created sheet\n", "parameters": {"type": "object", "properties": {"spreadsheet_id": {"type": "string"}, "title": {"type": "string"}}, "required": ["spreadsheet_id", "title"]}}}, {"type": "function", "function": {"name": "google_sheet_list_spreadsheets", "description": "\nList all spreadsheets in the configured Google Drive folder.\nIf no folder is configured, lists spreadsheets from 'My Drive'.\n\nReturns:\n    List of spreadsheets with their ID and title\n", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "google_sheet_share_spreadsheet", "description": "\nShare a Google Spreadsheet with multiple users via email, assigning specific roles.\n\nArgs:\n    spreadsheet_id: The ID of the spreadsheet to share.\n    recipients: A list of dictionaries, each containing 'email_address' and 'role'.\n                The role should be one of: 'reader', 'commenter', 'writer'.\n                Example: [\n                    {'email_address': 'user1@example.com', 'role': 'writer'},\n                    {'email_address': 'user2@example.com', 'role': 'reader'}\n                ]\n    send_notification: Whether to send a notification email to the users. Defaults to True.\n\nReturns:\n    A dictionary containing lists of 'successes' and 'failures'. \n    Each item in the lists includes the email address and the outcome.\n", "parameters": {"type": "object", "properties": {"spreadsheet_id": {"type": "string"}, "recipients": {"type": "array", "items": {"type": "object"}}, "send_notification": {"type": "boolean"}}, "required": ["spreadsheet_id", "recipients"]}}}], "tool_choice": "auto"}, "status": "success", "messages": [{"role": "user", "content": "You need to read the inventory levels of WooCommerce products, check the current stock quantity (stock_quantity) for each product against the safety threshold (stock_threshold), identify all products with stock below the threshold, and automatically update a Google Sheets purchase requisition list named stock_sheet. For each low-stock product, record it in Google Sheets and send an email notification to the purchasing manager (the email address is in purchasing_manager_email.txt). You need to find all low-stock products, record them and send emails. The email template can be found in stock_alert_email_template.md."}, {"role": "assistant", "content": ""}], "key_stats": {"interaction_turns": 1, "tool_calls": 22, "cumulative_tool_calls": 22, "agent_llm_requests": 0, "total_tokens": 994028, "input_tokens": 979894, "output_tokens": 14134, "total_events": 47, "action_events": 22, "message_events": 2, "agent_status": "AgentExecutionStatus.FINISHED"}, "agent_cost": {"total_cost": 3.1517, "total_input_tokens": 979894, "total_output_tokens": 14134, "total_requests": 0}, "user_cost": {"total_cost": 0.0, "total_input_tokens": 0, "total_output_tokens": 0, "total_requests": 0}, "resumed": false, "session_id": "task_finalpool-woocommerce-stock-alert_session", "conversation_id": "9856161d-7d5e-4eaf-9699-be6c31b0f75f"}